import { Container, Row, Col} from 'react-bootstrap'
import Head from 'next/head'
import React, { useEffect, useState } from 'react'
import { useSelector, useDispatch } from 'react-redux'
import { fetchQuotes } from '../redux/features/quoteSlice'
import QuoteCard from '../components/QuoteCard'
import Skeleton from '@mui/material/Skeleton'
import Button from '@mui/material/Button'
import Snackbar from '@mui/material/Snackbar';
import { IconButton } from '@mui/material'
import CloseIcon from '@mui/icons-material/Close';


const Feed = ()=>{
    const quotes = useSelector(state=>state.quote.quotes)
    const dispatch = useDispatch()
    const user = useSelector(state=>state.user.user)
    const loadingQuotes = useSelector(state=>state.quote.loading)
    const [skip, setSkip] = useState(0)
    const limit = 3
    const noMore = useSelector(state=>state.quote.noMore)
    const [openSnackbar, setOpensnackbar] = useState(false)

    useEffect(()=>{
        if (!user){
            console.log('no user')
            return
        }
        dispatch(fetchQuotes({token: user.token, limit, skip}))
        setSkip(skip+3) 
    }, [user])

    const handleLoadMore = async()=>{
        if (noMore){
            setOpensnackbar(true)
            return
        }
        dispatch(fetchQuotes({token: user.token, limit, skip}))
        setSkip(skip+3) 
    }

    const handleCloseSnackbar = (event, reason) => {
        if (reason === 'clickaway') {
          return;
        }
        setOpensnackbar(false);
    };
    const snackbarAction = (
        <React.Fragment>
          
          <IconButton
            size="small"
            aria-label="close"
            color="inherit"
            onClick={handleCloseSnackbar}
          >
            <CloseIcon fontSize="small" />
          </IconButton>
        </React.Fragment>
      );
    if (!user){
        return (
            <h4 style={{textAlign: 'center'}}>Please Login Or Signup To View The Quotes Feed</h4>
        )
    }
    
    return (
        <>
            <Head>
                <title>Feed</title>
            
                {/* <meta name="description" content="Generated by create next app" /> */}
                {/* <link rel="icon" href="/favicon.ico" /> */}
            </Head>
            <Container style={{textAlign: 'center'}}>
                <h1 style={{textAlign: 'center'}}>Quotes Feed</h1>
                {quotes.map((quote, quoteIndex)=>(<Row key={quote._id}>
                    <Col>
                        <QuoteCard quote={quote} quoteIndex={quoteIndex} />
                    </Col>
                </Row>))}
                {loadingQuotes && <Container>
                    <Row>
                        <Col xs={10} lg={8} style={{margin: '40px auto'}}>
                            <Skeleton animation="wave" />
                        </Col>
                        <Col xs={10} lg={8} style={{margin: '40px auto'}}>
                            <Skeleton animation="wave" />
                        </Col>
                        <Col xs={10} lg={8} style={{margin: '40px auto'}}>
                            <Skeleton animation="wave" />
                        </Col>
                        <Col xs={10} lg={8} style={{margin: '40px auto'}}>
                            <Skeleton animation="wave" />
                        </Col>
                    </Row>
                </Container>}
                <Button style={{margin: '30px auto'}} variant="contained" onClick={handleLoadMore}>Load more quotes</Button>
                <Snackbar
                    
                    autoHideDuration={6000}
                    open={openSnackbar}
                    onClose={handleCloseSnackbar}
                    message="No More Quotes"
                    action={snackbarAction}
                />
            </Container>
        </>

    )
}

export default Feed